/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./web/app/themes/growtype/resources/scripts/plugins/buddypress/general.js":
/*!*********************************************************************************!*\
  !*** ./web/app/themes/growtype/resources/scripts/plugins/buddypress/general.js ***!
  \*********************************************************************************/
/***/ (function() {

eval("\n\n(function ($) {\n  var body = $('body'),\n      profileNav = $('.nav-container .profile-nav'),\n      subNav = $('.bp-navs:not(.single-screen-navs) > ul'); // Initiate flex menu on profile nav\n\n  if (profileNav.length) {\n    profileNav.flexMenu({\n      showOnHover: false,\n      cutoff: 0,\n      popupClass: \"dropdown-menu-right\",\n      linkText: '<span class=\"nav-link-text\">' + growtype_params.text_more + '<text>',\n      showCount: true,\n      hOverflow: true\n    });\n  } // Flex menu for bp navs\n\n\n  if (subNav.has(\"li\").length) {\n    subNav.flexMenu({\n      showOnHover: false,\n      cutoff: 0,\n      popupClass: \"dropdown-menu-right\",\n      linkText: '<i class=\"uil-ellipsis-h\"></i>',\n      hOverflow: true,\n      shouldApply: function shouldApply() {\n        if (subNav.closest('#buddypress').hasClass('bp-dir-vert-nav')) {\n          if (window.innerWidth > 991.98) {\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n    });\n  } // Move bp template notices\n\n\n  if ($('#item-header .bp-feedback').length) {\n    $('#item-header .bp-feedback').prependTo('.profile-col-main').css({\n      'margin-top': '0'\n    });\n  } // Truncate about group text\n\n\n  if (body.hasClass('groups')) {\n    $('.about-group').shorten({\n      showChars: 75,\n      moreText: growtype_params.text_read_more,\n      lessText: growtype_params.text_read_close\n    });\n  } // Load activity on scroll\n\n\n  if (body.hasClass('activity') || body.hasClass('group-home')) {\n    // Check the window scroll event.\n    $(window).scroll(function () {\n      // Find the visible \"load more\" button.\n      // since BP does not remove the \"load more\" button, we need to find the last one that is visible.\n      var load_more_btn = $('li.load-more'); // If there is no visible \"load more\" button, we've reached the last page of the activity stream.\n      // If data attribute is set, we already triggered request for ths specific button.\n\n      if (!load_more_btn.get(0) || load_more_btn.data('bpaa-autoloaded')) {\n        return;\n      } // Find the offset of the button.\n\n\n      var pos = load_more_btn.offset();\n      var offset = pos.top - 50; // 50 px before we reach the button.\n      // If the window height+scrollTop is greater than the top offset of the \"load more\" button,\n      // we have scrolled to the button's position. Let us load more activity.\n\n      if ($(window).scrollTop() + $(window).height() > offset) {\n        load_more_btn.data('bpaa-autoloaded', 1);\n        load_more_btn.find('a')[0].click();\n      }\n    });\n  }\n  /**\n   * rtmedia\n   */\n\n\n  if ($('#rtmedia-action-update').length > 0) {\n    $('.rtmedia-add-media-button').append('<span class=\"btn\">' + growtype_params.text_attach_media + '</span>');\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./web/app/themes/growtype/resources/scripts/plugins/buddypress/general.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./web/app/themes/growtype/resources/scripts/plugins/buddypress/general.js"]();
/******/ 	
/******/ })()
;